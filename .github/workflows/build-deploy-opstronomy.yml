name: 'Deploy New Version'
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Get GCP Kubernetes Autopilot cluster credentials
      uses: google-github-actions/get-gke-credentials@v0.3.0
      with:
        cluster_name: ${{ secrets.GCP_CLUSTER_NAME }}
        location: ${{ secrets.GCP_CLUSTER_REGION }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Create deployment if it doesn't exist
      run: |
        if ! kubectl get deployments/my-app; then
          kubectl create deployment my-app --image=asia-south1-docker.pkg.dev/practise-414115/hasura/hasura/graphql-engine:latest
        fi

    - name: Set environment variables
      run: |
        kubectl set env deployment/my-app VAR1=${{ secrets.HASURA_GRAPHQL_ADMIN_SECRET }} VAR2=${{ secrets.HASURA_GRAPHQL_DEV_MODE }} VAR3=${{ secrets.HASURA_GRAPHQL_ENABLED_LOG_TYPES }} VAR4=${{ secrets.HASURA_GRAPHQL_ENABLE_CONSOLE }} VAR5=${{ secrets.HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS }} VAR6=${{ secrets.HASURA_GRAPHQL_METADATA_DATABASE_URL }}  VAR8=${{ secrets.PORT }}

    - name: Deploy new version to GCP Kubernetes Autopilot
      run: |
       kubectl set image deployment/my-app my-app=asia-south1-docker.pkg.dev/practise-414115/hasura/hasura/graphql-engine:latest